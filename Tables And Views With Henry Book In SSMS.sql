--										Tables And Views With Henry Books In SSMS

-- Load The Data Included In the "Database Creation For Analysis In SSMS" File Before Running The Below Commands.

-- Setting Database To Use
USE GUIDE;

-- Viewing All Henry Books Tables
SELECT BRANCH_NUM, BRANCH_NAME, BRANCH_LOCATION, NUM_EMPLOYEES 
FROM BRANCH;

SELECT PUBLISHER_CODE, PUBLISHER_NAME, CITY 
FROM PUBLISHER;

SELECT AUTHOR_NUM, AUTHOR_LAST, AUTHOR_FIRST 
FROM AUTHOR;

SELECT BOOK_CODE, AUTHOR_NUM, SEQUENCE 
FROM WROTE;

SELECT BOOK_CODE, BRANCH_NUM, ON_HAND 
FROM INVENTORY;

SELECT BOOK_CODE, TITLE, PUBLISHER_CODE, TYPE, FORMAT(PRICE, 'C') AS PRICE, PAPERBACK 
FROM BOOK;

-- Creating SALES_BRANCH Table
CREATE TABLE SALES_BRANCH
(BRANCH_NUM VARCHAR(2) PRIMARY KEY NOT NULL,
BRANCH_NAME VARCHAR(30),
BRANCH_LOCATION VARCHAR(30),
NUM_EMPLOYEES INT);

-- Inserting Values Into SALES_BRANCH
INSERT INTO SALES_BRANCH VALUES
('5', 'Henry Town Pizza', '165 Plaza', 3)

-- Viewing SALES_BRANCH Table
SELECT * 
FROM SALES_BRANCH;

-- Dropping SALES_BRANCH Table
DROP TABLE SALES_BRANCH;

-- Creating FICTION Table
CREATE TABLE FICTION
(BOOK_CODE CHAR(4) PRIMARY KEY NOT NULL,
TITLE CHAR(40),
PUBLISHER_CODE CHAR(3),
PRICE DECIMAL(4,2) );

-- Inserting Values Into FICTION Table
INSERT INTO FICTION
SELECT BOOK_CODE, TITLE, PUBLISHER_CODE, PRICE 
FROM BOOK 
WHERE TYPE = 'FIC';

-- Updating Values In FICTION Table
UPDATE FICTION
SET PRICE = PRICE * .96
WHERE PUBLISHER_CODE = 'LB';

UPDATE FICTION
SET PRICE = 20
WHERE TITLE = 'To Kill A Mockingbird';

-- Deleting Values In FICTION Table
DELETE FICTION
WHERE BOOK_CODE = '9883';

-- Adding Column To FICTION Table
ALTER TABLE FICTION
ADD BEST_SELLER CHAR(1);

-- Adding And Changing Values Of New Column
UPDATE FICTION
SET BEST_SELLER = 'N';

UPDATE FICTION
SET BEST_SELLER = 'Y'
WHERE TITLE = 'Song of Solomon';

-- Changing Column Formats
ALTER TABLE FICTION
ALTER COLUMN TITLE CHAR(50);

ALTER TABLE FICTION
ALTER COLUMN BEST_SELLER CHAR(1) NOT NULL;

-- Viewing Finished FICTION Table
SELECT * FROM FICTION;

-- Dropping FICTION Table
DROP TABLE FICTION;

-- Creating View PLUME
CREATE VIEW PLUME AS
SELECT BOOK_CODE, TITLE, TYPE, PRICE 
FROM BOOK
WHERE PUBLISHER_CODE = 'PL';

-- What Books Are Priced Less Than 13
SELECT * 
FROM PLUME 
WHERE PRICE < 13;

-- Creating View NONPAPERBACK
CREATE VIEW NONPAPERBACK AS
SELECT BOOK_CODE, TITLE, P.PUBLISHER_NAME, PRICE
FROM BOOK B, PUBLISHER P
WHERE B.PUBLISHER_CODE = P.PUBLISHER_CODE AND PAPERBACK = 'N';
  
-- What Books Are Priced Less Than 20
SELECT * 
FROM NONPAPERBACK 
WHERE PRICE < 20;

-- Dropping View NONPAPERBACK
DROP VIEW NONPAPERBACK;

-- Creating View BOOK_INVENTORY
CREATE VIEW BOOK_INVENTORY AS
SELECT BRANCH_NUM, SUM(BRANCH_NUM) AS UNITS
FROM BOOK B, INVENTORY I
WHERE B.BOOK_CODE = I.BOOK_CODE
GROUP BY BRANCH_NUM;

-- What Branches Have Inventory Greater Than 25
SELECT * 
FROM BOOK_INVENTORY 
WHERE UNITS > 25;

-- Dropping View BOOK_INVENTORY
DROP VIEW BOOK_INVENTORY;

-- Creating An Index For Title In The BOOK Table
CREATE INDEX BOOK_INDEX1 ON BOOK(TITLE);

-- Creating An Index For Type In The BOOK Table
CREATE INDEX BOOK_INDEX2 ON BOOK(TYPE);

-- Creating An Index For City And Publisher Name In The PUBLISHER Table
CREATE INDEX BOOK_INDEX3 ON PUBLISHER(CITY, PUBLISHER_NAME);

-- Dropping The Index For City And Publisher Name
DROP INDEX PUBLISHER.BOOK_INDEX3;

-- Adding A Foreign Key To A Table
ALTER TABLE BOOK
ADD FOREIGN KEY (PUBLISHER_CODE) REFERENCES PUBLISHER;

-- Setting Up A Data Validation Check
ALTER TABLE BOOK
ADD CHECK (PAPERBACK IN ('Y', 'N') );

-- Testing Data Validation Check
UPDATE BOOK
SET PAPERBACK = 'Z';