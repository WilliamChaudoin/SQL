--											 Premiere Products Analysis In SSMS

-- Load The Data Included In the "Database Creation For Analysis In SSMS" File Before Running The Below Commands.

-- Setting Database To Use
USE GUIDE;

-- Format For All Premiere Products Tables
EXEC SP_COLUMNS REP;
EXEC SP_COLUMNS CUSTOMER;
EXEC SP_COLUMNS ORDERS;
EXEC SP_COLUMNS ORDER_LINE;
EXEC SP_COLUMNS PART;

-- Viewing All Premiere Products Tables
SELECT REP_NUM, LAST_NAME, FIRST_NAME, STREET, CITY, STATE, ZIP, FORMAT(COMMISSION, 'C') AS COMMISSION, RATE
FROM REP;

SELECT CUSTOMER_NUM, CUSTOMER_NAME, STREET, CITY, STATE, ZIP, FORMAT(BALANCE, 'C') AS BALANCE , FORMAT(CREDIT_LIMIT, 'C') AS CREDIT_LIMIT, REP_NUM
FROM CUSTOMER;

SELECT ORDER_NUM, ORDER_DATE, CUSTOMER_NUM 
FROM ORDERS;

SELECT ORDER_NUM, PART_NUM, NUM_ORDERED, FORMAT(QUOTED_PRICE, 'C') AS QUOTED_PRICE
FROM ORDER_LINE;

SELECT PART_NUM, DESCRIPTION, ON_HAND, CLASS, WAREHOUSE, FORMAT(PRICE, 'C') AS PRICE
FROM PART;

-- All Unique Customers
SELECT DISTINCT(CUSTOMER_NUM)
FROM ORDERS;

-- Which Customers Belong To Reps 35 and 65
SELECT CUSTOMER_NUM, CUSTOMER_NAME 
FROM CUSTOMER 
WHERE REP_NUM IN ('35', '65');

-- Total Parts For Sale
SELECT COUNT(*) AS TOTAL
FROM PART;

-- Total Parts In Class "HW"
SELECT COUNT(*) AS TOTAL
FROM PART
WHERE CLASS = 'HW';

-- Parts With Classes "AP" or "SG"
SELECT PART_NUM, DESCRIPTION 
FROM PART 
WHERE CLASS IN ('AP', 'SG');

-- Parts That Do Not Have The Class AP
SELECT PART_NUM, DESCRIPTION 
FROM PART 
WHERE CLASS != 'AP';

-- Customers With Names That Start With B
SELECT CUSTOMER_NAME 
FROM CUSTOMER 
WHERE CUSTOMER_NAME LIKE '%B__%';

-- Finding Customers In A Specific City
SELECT CUSTOMER_NUM, CUSTOMER_NAME
FROM CUSTOMER
WHERE CITY = 'Grove';

-- What Items From Warehouse 3 Have More Than 25 In Stock
SELECT DESCRIPTION
FROM PART
WHERE WAREHOUSE = 3 AND ON_HAND > 25;

-- What Items Are From Warehouse 3 Or Have More Than 25 In Stock
SELECT DESCRIPTION
FROM PART
WHERE WAREHOUSE = 3 OR ON_HAND > 25;

-- What Items Are Not In Warehouse 3
SELECT DESCRIPTION
FROM PART
WHERE WAREHOUSE != 3;

-- All Parts Organized By Warehouse And Name
SELECT * 
FROM PART 
ORDER BY WAREHOUSE, PART_NUM;

-- What Orders Contain Specific Parts
SELECT ORDER_NUM
FROM ORDER_LINE
WHERE PART_NUM IN ('CD52', 'DR93', 'DW11', 'KL62', 'KT03')

-- The Value Of Parts With Class "SG"
SELECT PART_NUM, DESCRIPTION, ON_HAND * PRICE AS ON_HAND_VALUE 
FROM PART 
WHERE CLASS = 'SG'; 

-- Parts With Inventory Stock Between 10 and 25
SELECT PART_NUM, DESCRIPTION 
FROM PART 
WHERE ON_HAND BETWEEN 10 AND 25; 

-- The Value Of Parts That Exceed Or Equal 7500
SELECT PART_NUM, DESCRIPTION, ON_HAND * PRICE AS ON_HAND_VALUE 
FROM PART 
WHERE (ON_HAND * PRICE) >= 7500

-- Looking For Null Values
SELECT CUSTOMER_NUM, CUSTOMER_NAME
FROM CUSTOMER
WHERE STREET IS NULL;

-- Looking For Not Null Values
SELECT CUSTOMER_NUM, CUSTOMER_NAME
FROM CUSTOMER
WHERE STREET IS NOT NULL;

-- Specific Customer Orders On A Specific Date
SELECT ORDER_NUM, CUSTOMER_NUM 
FROM ORDERS 
WHERE CUSTOMER_NUM = '608' AND ORDER_DATE = '10/23/2010';

-- Which Customers Have Exceeded Their Credit Limits
SELECT CUSTOMER_NUM, CUSTOMER_NAME, BALANCE, CREDIT_LIMIT
FROM CUSTOMER
WHERE BALANCE > CREDIT_LIMIT;

-- What Customers Have a Balance Greater Than 2000 But Less Than 5000
SELECT CUSTOMER_NUM, CUSTOMER_NAME, BALANCE
FROM CUSTOMER
WHERE BALANCE >= 2000 AND BALANCE <= 5000;

-- Alternative Solution To What Customers Have a Balance Greater Than 2000 But Less Than 5000 Using "BETWEEN"
SELECT CUSTOMER_NUM, CUSTOMER_NAME, BALANCE
FROM CUSTOMER
WHERE BALANCE BETWEEN 2000 AND 5000;

-- The Number Of Customers And The Total Balance
SELECT COUNT(CUSTOMER_NUM) AS COUNT, SUM(BALANCE) AS TOTAL
FROM CUSTOMER;

-- The Total, Average, Max, And Min Balances
SELECT SUM(BALANCE) AS TOTAL, AVG(BALANCE) AS AVERAGE, MAX(BALANCE) AS MAX, MIN(BALANCE) AS MIN
FROM CUSTOMER;

-- Customer Available Credit
SELECT CUSTOMER_NUM, CUSTOMER_NAME, (CREDIT_LIMIT - BALANCE) AS AVAILABLE_CREDIT
FROM CUSTOMER;

-- Customer Available Credit Equal To Or Below 5000
SELECT CUSTOMER_NUM, CUSTOMER_NAME, (CREDIT_LIMIT - BALANCE) AS AVAILABLE_CREDIT
FROM CUSTOMER
WHERE (CREDIT_LIMIT - BALANCE) <= 5000;

-- Total Of Unique Customers
SELECT COUNT(DISTINCT(CUSTOMER_NUM)) AS UNIQUE_CUSTOMERS
FROM ORDERS;

-- Customers With Credit Limits Less Than Or Equal To 10000
SELECT CUSTOMER_NAME 
FROM CUSTOMER 
WHERE CREDIT_LIMIT >= 10000;

-- The Number Of Customers With A Balance That Exceeds Their Credit Limit
SELECT COUNT(*) AS TOTAL
FROM CUSTOMER 
WHERE BALANCE > CREDIT_LIMIT;

-- The Total Of All Customer Balances Represented By Rep 65
SELECT SUM(BALANCE) AS BALANCE_TOTAL 
FROM CUSTOMER 
WHERE REP_NUM = '65';

-- The Parts And Their Value Where Their Stock Totals Are Higher Than Average
SELECT PART_NUM, DESCRIPTION, ON_HAND * PRICE AS ON_HAND_VALUE 
FROM PART 
WHERE ON_HAND > (SELECT AVG(ON_HAND) FROM PART);

-- The Least Expensive Part
SELECT * FROM PART 
WHERE PRICE = (SELECT MIN(PRICE) AS MIN_PRICE FROM PART);

-- The Total Customer Balance By Rep
SELECT SUM(BALANCE) AS TOTAL_BALANCE, REP_NUM 
FROM CUSTOMER 
GROUP BY REP_NUM
ORDER BY REP_NUM;

-- The Total Customer Balance By Rep That Are Greater Than 10000
SELECT SUM(BALANCE) AS TOTAL_BALANCE, REP_NUM
FROM CUSTOMER
GROUP BY REP_NUM
HAVING SUM(BALANCE) > 10000
ORDER BY REP_NUM;

-- The Average Balance Per Rep
SELECT REP_NUM, AVG(BALANCE) AS AVG_BALANCE
FROM CUSTOMER
GROUP BY REP_NUM;

-- The Average Balance For Reps With Less Than 4 Customers Using Having
SELECT REP_NUM, AVG(BALANCE) AS AVG_BALANCE
FROM CUSTOMER
GROUP BY REP_NUM
HAVING COUNT(*) < 4;

-- Customer Credit Limit Totals By Rep
SELECT CREDIT_LIMIT, COUNT(*) AS NUMBER
FROM CUSTOMER
WHERE REP_NUM = '20'
GROUP BY CREDIT_LIMIT
ORDER BY CREDIT_LIMIT;